name: Test run
run-name: ${{ github.event_name == 'push' && format('Attempting to refresh {0} workspace', github.ref_name)
          || github.event_name == 'pull_request' && format('Testing PR to {0}', github.event.pull_request.base.ref) }} 
on:
  push:
    branches:
      - dev
      - qa
      - main
  pull_request:
    branches:
      - dev
      - qa
      - main

jobs:
  run-tests:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          # ref: ${{ github.head_ref || github.ref_name }} 
          ref: ${{ github.event.pull_request.head.sha || github.ref_name }} 
      - name: Create venv
        run: |
          python3 -m venv .venv
      - name: Run tests
        run: |
          source .venv/bin/activate
          git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}
          set -o pipefail
          pip install pytest
          python3 -m pytest -s -v | tee results.log
      - name: Comment PR to ${{ github.event.pull_request.base.ref }} branch
        if: github.event_name == 'pull_request' && success() || failure()
        run: |
          git branch
          echo ${{ secrets.NIEISTNIEJACY }}
          echo ${{ secrets.SEKRETO }}
          echo ${{ github.event.number }}
          echo ${{ vars.VAR1 }}
          
          # commit_short_sha=github.event.pull_request.head.sha
          results_raw=$(cat results.log)
          results_parsed=$(echo "${results_raw//$'\n'/\\r\\n}")
          prefix="<details>\\r\\n<summary>Expand to view full test results for commit \
          ${{ github.event.pull_request.head.sha }} </summary>\\r\\n\\r\\n\`\`\`python\\r\\n"
          suffix="\\r\\n\`\`\`\\r\\n\\r\\n</details>"

          warning_signs=$(printf '\\\\:warning\\\\:%.0s' {1..6})
          warnings_prefix="\\r\\n\\r\\n\\r\\n # ${warning_signs} WARNINGS SUMMARY ${warning_signs} \\r\\n\`\`\`python\\r\\n"
          warnings_suffix="\\r\\n # ${warning_signs} REVIEW WARNINGS ${warning_signs} \\r\\n\`\`\`"
          warnings=$(sed -n '/warnings summary/,/===/p' results.log)
          warnings_parsed=$(echo "${warnings//$'\n'/\\r\\n}")

          if [[ -n $warnings ]]; then
            echo "są warningi, cool"
            echo $warnings_parsed
          else
            echo "ni ma warningów"
            echo $warnings
          fi
          
          body="\" ${prefix} ${results_parsed} ${suffix} ${warnings_prefix} ${warnings_parsed} ${warnings_suffix} \""

          echo $body
          echo -e \n\n\n
          
          curl -Ss -H "Authorization: token ${{ secrets.PR_PAT }}" \
          -X POST -d '{"body": '"${body}"'}' \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"
          
  refresh-dev:
    runs-on: self-hosted
    needs: run-tests
    if: github.event_name == 'push' && github.ref_name == 'dev'
    steps:
      - uses: actions/checkout@v4      
      - name: Configure git
        run: |
          echo ${{ github.event.pull_request.head.ref }}
          echo ${{ github.event.pull_request.base.ref }}
          
  refresh-qa:
    runs-on: self-hosted
    needs: run-tests
    if: github.event_name == 'push' && github.ref_name == 'qa'
    steps:
      - uses: actions/checkout@v4      
      - name: Configure git
        run: |
          git config --global user.email "rafal.michalak@bitpeak.pl"
          git config --global user.name "RafalMichalakBP"
